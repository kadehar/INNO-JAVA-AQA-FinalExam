{"uid":"ebff87da974d04e3","name":"Can get employees by their company id","fullName":"com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId","historyId":"de3ee291b29acbfca090a13c7a0a1094","time":{"start":1744043957125,"stop":1744043963376,"duration":6251},"description":"","status":"failed","statusMessage":"\nExpecting ArrayList:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=null, url=null, phone=79993451582, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\n","statusTrace":"java.lang.AssertionError: \nExpecting ArrayList:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=null, url=null, phone=79993451582, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\n\n\tat com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId(SampleTests.java:60)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1501)\n\tat java.base/java.util.concurrent.ForkJoinPool.helpJoin(ForkJoinPool.java:2274)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:495)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:662)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1460)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2036)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:189)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"\nExpecting ArrayList:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=null, url=null, phone=79993451582, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\n","statusTrace":"java.lang.AssertionError: \nExpecting ArrayList:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=null, url=null, phone=79993451582, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\n\n\tat com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId(SampleTests.java:60)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1501)\n\tat java.base/java.util.concurrent.ForkJoinPool.helpJoin(ForkJoinPool.java:2274)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:495)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:662)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1460)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2036)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:189)\n","steps":[{"name":"Insert new company Gleason Inc data in DB","time":{"start":1744043957450,"stop":1744043959722,"duration":2272},"status":"passed","steps":[],"attachments":[{"uid":"6546c19db7e55af0","name":"INSERT query to: x_clients_db_eefj","source":"6546c19db7e55af0.html","type":"text/html","size":788}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Insert new user 123kadehar123 data in DB","time":{"start":1744043959761,"stop":1744043959973,"duration":212},"status":"passed","steps":[],"attachments":[{"uid":"914dd1d24c8b39b","name":"INSERT query to: x_clients_db_eefj","source":"914dd1d24c8b39b.html","type":"text/html","size":855}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Get auth token for user 123kadehar123","time":{"start":1744043959982,"stop":1744043961816,"duration":1834},"status":"passed","steps":[],"attachments":[{"uid":"52351acf7ff1bc39","name":"Request","source":"52351acf7ff1bc39.html","type":"text/html","size":1542},{"uid":"1cd2aa6218660507","name":"Response","source":"1cd2aa6218660507.html","type":"text/html","size":2758}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Create new employee with name Shana","time":{"start":1744043961869,"stop":1744043962321,"duration":452},"status":"passed","steps":[],"attachments":[{"uid":"c4a905442de6b75c","name":"Request","source":"c4a905442de6b75c.html","type":"text/html","size":1892},{"uid":"93fbaa3d36185643","name":"Response","source":"93fbaa3d36185643.html","type":"text/html","size":2532}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Find all employees by company ID","time":{"start":1744043962322,"stop":1744043962563,"duration":241},"status":"passed","steps":[],"attachments":[{"uid":"dac5829a349f8183","name":"Request","source":"dac5829a349f8183.html","type":"text/html","size":1370},{"uid":"4c4bb82de6e48ce","name":"Response","source":"4c4bb82de6e48ce.html","type":"text/html","size":2816}],"parameters":[{"name":"companyId","value":"742"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Delete employee by its ID","time":{"start":1744043962773,"stop":1744043962974,"duration":201},"status":"passed","steps":[],"attachments":[{"uid":"b7908dc1838f5ea8","name":"DELETE query to: x_clients_db_eefj","source":"b7908dc1838f5ea8.html","type":"text/html","size":695}],"parameters":[{"name":"id","value":"422"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Delete user by its ID","time":{"start":1744043962974,"stop":1744043963172,"duration":198},"status":"passed","steps":[],"attachments":[{"uid":"3f85cd8b80269e06","name":"DELETE query to: x_clients_db_eefj","source":"3f85cd8b80269e06.html","type":"text/html","size":695}],"parameters":[{"name":"id","value":"80"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Delete company by its ID","time":{"start":1744043963172,"stop":1744043963372,"duration":200},"status":"passed","steps":[],"attachments":[{"uid":"bd73df3e1c21f5c1","name":"DELETE query to: x_clients_db_eefj","source":"bd73df3e1c21f5c1.html","type":"text/html","size":694}],"parameters":[{"name":"id","value":"742"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":11,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"api"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.kadehar.inno.tests.SampleTests]/[method:canGetEmployeesByCompanyId(com.github.kadehar.inno.model.rest.EmployeeJson)]"},{"name":"host","value":"fv-az2032-811"},{"name":"thread","value":"2548@fv-az2032-811.ForkJoinPool-1-worker-1(26)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"testClass","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"testMethod","value":"canGetEmployeesByCompanyId"},{"name":"suite","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["api"]},"source":"ebff87da974d04e3.json","parameterValues":[]}