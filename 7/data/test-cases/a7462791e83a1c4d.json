{"uid":"a7462791e83a1c4d","name":"Can get employees by their company id","fullName":"com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId","historyId":"de3ee291b29acbfca090a13c7a0a1094","time":{"start":1744044092364,"stop":1744044099576,"duration":7212},"description":"","status":"failed","statusMessage":"\nExpecting ArrayList:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=null, url=null, phone=79990056459, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\n","statusTrace":"java.lang.AssertionError: \nExpecting ArrayList:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=null, url=null, phone=79990056459, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\n\n\tat com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId(SampleTests.java:60)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1501)\n\tat java.base/java.util.concurrent.ForkJoinPool.helpJoin(ForkJoinPool.java:2274)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:495)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:662)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1460)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2036)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:189)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"\nExpecting ArrayList:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=null, url=null, phone=79990056459, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\n","statusTrace":"java.lang.AssertionError: \nExpecting ArrayList:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=null, url=null, phone=79990056459, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=423, firstName=Mervin, lastName=Kassulke, middleName=Vickey, companyId=743, email=elmer.thompson@hotmail.com, url=www.kraig-haley.io, phone=79990056459, birthDate=1995-04-07, active=true)]\n\n\tat com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId(SampleTests.java:60)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1501)\n\tat java.base/java.util.concurrent.ForkJoinPool.helpJoin(ForkJoinPool.java:2274)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:495)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:662)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1460)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2036)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:189)\n","steps":[{"name":"Insert new company Upton, Sawayn and Farrell data in DB","time":{"start":1744044092682,"stop":1744044095756,"duration":3074},"status":"passed","steps":[],"attachments":[{"uid":"d528475034beb8aa","name":"INSERT query to: x_clients_db_eefj","source":"d528475034beb8aa.html","type":"text/html","size":806}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Insert new user 123kadehar123 data in DB","time":{"start":1744044095812,"stop":1744044096019,"duration":207},"status":"passed","steps":[],"attachments":[{"uid":"f943d0d072656a87","name":"INSERT query to: x_clients_db_eefj","source":"f943d0d072656a87.html","type":"text/html","size":851}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Get auth token for user 123kadehar123","time":{"start":1744044096024,"stop":1744044097934,"duration":1910},"status":"passed","steps":[],"attachments":[{"uid":"8a01cf0528ec0238","name":"Request","source":"8a01cf0528ec0238.html","type":"text/html","size":1542},{"uid":"2177eb9bc343e57a","name":"Response","source":"2177eb9bc343e57a.html","type":"text/html","size":2754}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Create new employee with name Mervin","time":{"start":1744044097986,"stop":1744044098221,"duration":235},"status":"passed","steps":[],"attachments":[{"uid":"906b37d73c0ab000","name":"Request","source":"906b37d73c0ab000.html","type":"text/html","size":1902},{"uid":"d90671248f8b6446","name":"Response","source":"d90671248f8b6446.html","type":"text/html","size":2532}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Find all employees by company ID","time":{"start":1744044098223,"stop":1744044098643,"duration":420},"status":"passed","steps":[],"attachments":[{"uid":"c702ca2422dcf202","name":"Request","source":"c702ca2422dcf202.html","type":"text/html","size":1370},{"uid":"d11c55414413d574","name":"Response","source":"d11c55414413d574.html","type":"text/html","size":2820}],"parameters":[{"name":"companyId","value":"743"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Delete employee by its ID","time":{"start":1744044098897,"stop":1744044099176,"duration":279},"status":"passed","steps":[],"attachments":[{"uid":"b2e0a054bf39c40e","name":"DELETE query to: x_clients_db_eefj","source":"b2e0a054bf39c40e.html","type":"text/html","size":695}],"parameters":[{"name":"id","value":"423"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Delete user by its ID","time":{"start":1744044099176,"stop":1744044099376,"duration":200},"status":"passed","steps":[],"attachments":[{"uid":"f79c5a42218f6088","name":"DELETE query to: x_clients_db_eefj","source":"f79c5a42218f6088.html","type":"text/html","size":695}],"parameters":[{"name":"id","value":"81"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Delete company by its ID","time":{"start":1744044099376,"stop":1744044099572,"duration":196},"status":"passed","steps":[],"attachments":[{"uid":"f3b68647b3e15ba7","name":"DELETE query to: x_clients_db_eefj","source":"f3b68647b3e15ba7.html","type":"text/html","size":694}],"parameters":[{"name":"id","value":"743"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":11,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"api"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.kadehar.inno.tests.SampleTests]/[method:canGetEmployeesByCompanyId(com.github.kadehar.inno.model.rest.EmployeeJson)]"},{"name":"host","value":"fv-az1624-565"},{"name":"thread","value":"2567@fv-az1624-565.ForkJoinPool-1-worker-1(26)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"testClass","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"testMethod","value":"canGetEmployeesByCompanyId"},{"name":"suite","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"ebff87da974d04e3","reportUrl":"https://kadehar.github.io/INNO-JAVA-AQA-FinalExam/6//#testresult/ebff87da974d04e3","status":"failed","statusDetails":"\nExpecting ArrayList:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=null, url=null, phone=79993451582, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=422, firstName=Shana, lastName=Klocko, middleName=Chae, companyId=742, email=francis.kilback@gmail.com, url=www.adam-block.info, phone=79993451582, birthDate=1995-04-07, active=true)]\n","time":{"start":1744043957125,"stop":1744043963376,"duration":6251}}]},"tags":["api"]},"source":"a7462791e83a1c4d.json","parameterValues":[]}