{"uid":"4f927bfbf5f42279","name":"Can get employees by their company id","fullName":"com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId","historyId":"de3ee291b29acbfca090a13c7a0a1094","time":{"start":1744046182352,"stop":1744046188197,"duration":5845},"description":"","status":"failed","statusMessage":"\nExpecting ArrayList:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=null, url=null, phone=79999760307, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\n","statusTrace":"java.lang.AssertionError: \nExpecting ArrayList:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=null, url=null, phone=79999760307, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\n\n\tat com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId(SampleTests.java:60)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1501)\n\tat java.base/java.util.concurrent.ForkJoinPool.helpJoin(ForkJoinPool.java:2274)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:495)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:662)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1460)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2036)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:189)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"\nExpecting ArrayList:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=null, url=null, phone=79999760307, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\n","statusTrace":"java.lang.AssertionError: \nExpecting ArrayList:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=null, url=null, phone=79999760307, birthDate=1995-04-07, active=true)]\nto contain:\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\nbut could not find the following element(s):\n  [EmployeeJson(id=426, firstName=Tyrone, lastName=Flatley, middleName=Robbie, companyId=746, email=wendell.ritchie@hotmail.com, url=www.layla-gerlach.name, phone=79999760307, birthDate=1995-04-07, active=true)]\n\n\tat com.github.kadehar.inno.tests.SampleTests.canGetEmployeesByCompanyId(SampleTests.java:60)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1501)\n\tat java.base/java.util.concurrent.ForkJoinPool.helpJoin(ForkJoinPool.java:2274)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:495)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:662)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1460)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2036)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:189)\n","steps":[{"name":"Insert new company Tremblay Group data in DB","time":{"start":1744046182680,"stop":1744046185161,"duration":2481},"status":"passed","steps":[],"attachments":[{"uid":"b9573db23b817b07","name":"INSERT query to: x_clients_db_eefj","source":"b9573db23b817b07.html","type":"text/html","size":792}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Insert new user 123kadehar123 data in DB","time":{"start":1744046185199,"stop":1744046185540,"duration":341},"status":"passed","steps":[],"attachments":[{"uid":"2dc49cb646e02b3d","name":"INSERT query to: x_clients_db_eefj","source":"2dc49cb646e02b3d.html","type":"text/html","size":859}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Get auth token for user 123kadehar123","time":{"start":1744046185545,"stop":1744046186414,"duration":869},"status":"passed","steps":[],"attachments":[{"uid":"998f3cb56db84fac","name":"Request","source":"998f3cb56db84fac.html","type":"text/html","size":1542},{"uid":"8e4e0095a3fd72d0","name":"Response","source":"8e4e0095a3fd72d0.html","type":"text/html","size":2762}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Create new employee with name Tyrone","time":{"start":1744046186461,"stop":1744046186737,"duration":276},"status":"passed","steps":[],"attachments":[{"uid":"ffc6b6fa228432ee","name":"Request","source":"ffc6b6fa228432ee.html","type":"text/html","size":1910},{"uid":"6737a06728f752b2","name":"Response","source":"6737a06728f752b2.html","type":"text/html","size":2532}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Find all employees by company ID","time":{"start":1744046186738,"stop":1744046187025,"duration":287},"status":"passed","steps":[],"attachments":[{"uid":"a05e939ca3094b9a","name":"Request","source":"a05e939ca3094b9a.html","type":"text/html","size":1370},{"uid":"ecfbd974eb52dc09","name":"Response","source":"ecfbd974eb52dc09.html","type":"text/html","size":2823}],"parameters":[{"name":"companyId","value":"746"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":2,"hasContent":true},{"name":"Delete employee by its ID","time":{"start":1744046187204,"stop":1744046187532,"duration":328},"status":"passed","steps":[],"attachments":[{"uid":"66460f1de85c9861","name":"DELETE query to: x_clients_db_eefj","source":"66460f1de85c9861.html","type":"text/html","size":695}],"parameters":[{"name":"id","value":"426"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Delete user by its ID","time":{"start":1744046187533,"stop":1744046187859,"duration":326},"status":"passed","steps":[],"attachments":[{"uid":"95b7c5997534d8bc","name":"DELETE query to: x_clients_db_eefj","source":"95b7c5997534d8bc.html","type":"text/html","size":695}],"parameters":[{"name":"id","value":"84"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"Delete company by its ID","time":{"start":1744046187860,"stop":1744046188186,"duration":326},"status":"passed","steps":[],"attachments":[{"uid":"92407119ef5a15f7","name":"DELETE query to: x_clients_db_eefj","source":"92407119ef5a15f7.html","type":"text/html","size":694}],"parameters":[{"name":"id","value":"746"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":8,"attachmentsCount":11,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"api"},{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.github.kadehar.inno.tests.SampleTests]/[method:canGetEmployeesByCompanyId(com.github.kadehar.inno.model.rest.EmployeeJson)]"},{"name":"host","value":"fv-az1372-353"},{"name":"thread","value":"2537@fv-az1372-353.ForkJoinPool-1-worker-1(26)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"testClass","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"testMethod","value":"canGetEmployeesByCompanyId"},{"name":"suite","value":"com.github.kadehar.inno.tests.SampleTests"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["api"]},"source":"4f927bfbf5f42279.json","parameterValues":[]}